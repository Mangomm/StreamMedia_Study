01-播放器框架分析
1）讲了每个文件的作用和对应ui的关系。
2）重点框架是：控件和播放逻辑不能随便相互调用，避免互相依赖，它们的调用都必须放在mainwindows主界面中处理。
3）并且如果真的做播放器方向，可以参考ijkplayer开源项目，这是一个b站开源的播放器，支持安卓、IOS系统。 
	或者直接看ffplay.c(实际是FFmpeg)的源码。

02-音频输出模块
1）将了如何从ffplay与ijkplayer的源码中拷贝相应的代码到自己的项目0voice_player_02中。首先：
	1. 实现0voice_player_02项目的ff_ffplay_def.h：从ffplay的ffplay.c拷一些，如果ffplay.c没有的，则从ijkplayer的ff_ffplay_def.h源码补充，
	一直考完该文件，当然他考完后，注释了一些我们暂时用不上的变量和函数，例如数据统计相关的。
	2. 实现0voice_player_02项目的ff_fferror.h：从ijkplayer的ff_fferror.h拷贝，实际目前也只有4个错误类型，很少。
	3. 实现0voice_player_02项目的ff_ffmsg.h：从ijkplayer的ff_ffmsg.h拷贝即可(去除ifndef define外全部拷贝即可)。
	4. 实现0voice_player_02项目的ff_ffplay.h(这项目好像是ffplay.h？反正是这两中一个，不会同时出现这两文件)：从ijkplayer的ffplay.h拷贝ffp_global_init()函数到ffp_create()这几个函数即可。
	5. 修bug，就是修上面拷贝后的一些报错，保证编译能过。
注意：本节虽然叫音频输出模块，但是该节视频完全是添加一些头文件，可能这些头文件与实现音频输出模块相关吧。
并且本节代码不是某个单独的功能，只是确保拷贝代码后能正常编译。
这节更多的是教你如何搬运代码。

03-视频输出模块
1）讲了ijkplayer的源码，以Android例子为例，ijk源码播放器实现的框架。分成3步：
	java控件层->jni接口调用层(即中间转发，用于调用底层)->c/c++底层播放的逻辑实现。
以后要实现支持不同的操作系统例如Andriod、IOS，主要改变jni的接口调用层即可，底层逻辑不需要怎么改变。
2）因为我们用qt做控件，所以我们的播放器项目这3步为：
	qt控件层->cpp接口调用层(文件为ijkplayer_qt.h与ijkplayer_qt.cpp)->c/c++底层逻辑(文件为ijkffplayer.h、ijkffplayer.c以及ff_play.c)。
3）从ijkplayer开源源码拷贝，往自己项目添加了ff_ffmsg_queue.h消息队列，还添加了config.h辅助配置，为了使用FFP_MERGE宏的逻辑。
注意：本节同样虽然叫视频输出模块，但是主要工作不是实现该功能，而是添加1）与2）的文件，搭建好播放器需要的开源源码，只是确保拷贝代码后能正常编译。

04-缓存队列设计
1）往项目添加ijkplayer_internal.h。
2）然后从ijkplayer开源项目中拷贝对应的代码，开始编写ijkplayer_qt.h/cpp以及ijkplayer.h/cpp的方法(主要是这两个，额外会因它两改些其它文件的内容)，实际上就是编写缓存队列相关的函数。
主要思想是：主界面发送消息后，调用ijkplayer_qt的接口去调用ijkplayer中的底层方法，处理后往队列中发送消息，反馈给主界面，
是否还经ijkplayer_qt的处理需要看代码才能确定。
3）然后他在ff_flay.c中include<iostream>导致报了一大堆错误，我当时一看就知道是这个原因了，他找到错误后，往代码添加了
一个关于SDL相关的头文件ijksdl_misc.h。
本节是player_03的代码。

05-音频解码模块
1）init初始化创建player。
2）以stop、pause为例创建信号槽。
3）开启队列。
4）设置资源。
本节实际就是从开源项目ijkplayer中不断拷贝代码修错误，并且主要是处理开启队列与设置资源的代码。
本节同样是保证编译通过，代码功能暂不考虑。
实际上就是考验我们搬运代码的能力，先确保添加某个模块后，编译通过，等所以模块添加完毕后，再考虑功能的实现与优化。

06-视频解码模块
1）讲了播放器如何设计缓存，实际上并未详细讲，只是大概说了一下，对应代码在ijkplayer开源项目中的ff_play.c带有buffering字眼的内容。
2）然后讲了播放器状态的转换。
3）实际上上面两点，都是按照播放器3-4xxx.png里面，我总结了一幅流程图去讲的。
	1. 首先从 第一点开始set_data_source那一步开始讲，对着ijkplayer的源码去讲。
	2. 然后对着第二点，openVideo的时候，对着ijkplayer的源码去讲。
	3. 讲完后，上面会开了一堆干活的线程，逐个挑选一些内容去讲，
	       例如主要讲了读线程的stream_open函数以及如何缓存视频内容等等。
本节课没有对自己的qt项目添加任何代码，都是对ijkplayer开源项目的源码去讲解。

总结day10的所有视频以及如何学习：
1）实际上先拷贝了一些源码到自己项目，然后对ijkplayer源码进行讲解。
2）学习ijkplayer的源码的话，对着day10里面唯一的pdf以及3-4xxx.png里面的那个流程图去细看即可。
3）后面自己如果真的做播放器方面的，可以参考本章节以及弄好的框架代码去优化，以及参考ijkplayer源码
去优化即可。不过后面的章节也会学到ffplay的内容，也可以对比参考，反正做播放器，参考ffplay与ijkplayer即可，
按照这种思想去做出商用的播放器是不成问题的，而且ijkplayer还是参考ffplay的源码的。

ijkplayer的学习到此为止。




实践：
1）0voice_player_01的能播放视频，但是还是有问题，例如播放视频中seek快进，有音频但是画面变成黑色。
2）0voice_player_04不能播放视频，对比了一下代码，应该是在01的基础上额外添加了代码，后面针对04优化吧。
